DIGEST eedc344e29cd1d9a246a1695f4d0f5e3
FTactics
R658:661 Poly <> <> lib
prf 937:942 <> silly1
R964:966 Coq.Init.Datatypes <> nat ind
R980:989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1003:1011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1017:1019 Coq.Init.Logic <> :type_scope:x_'='_x not
R1012:1012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1014:1014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1016:1016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1015:1015 Tactics <> o var
R1013:1013 Tactics <> n var
R1020:1020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1022:1022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1024:1024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1023:1023 Tactics <> p var
R1021:1021 Tactics <> m var
R995:997 Coq.Init.Logic <> :type_scope:x_'='_x not
R990:990 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R992:992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R994:994 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R993:993 Tactics <> o var
R991:991 Tactics <> n var
R998:998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1000:1000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1002:1002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1001:1001 Tactics <> p var
R999:999 Tactics <> n var
R976:978 Coq.Init.Logic <> :type_scope:x_'='_x not
R975:975 Tactics <> n var
R979:979 Tactics <> m var
prf 1548:1553 <> silly2
R1575:1577 Coq.Init.Datatypes <> nat ind
R1591:1600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1601:1601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1644:1653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1659:1661 Coq.Init.Logic <> :type_scope:x_'='_x not
R1654:1654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1656:1656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1658:1658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1657:1657 Tactics <> o var
R1655:1655 Tactics <> n var
R1662:1662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1664:1664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1666:1666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1665:1665 Tactics <> p var
R1663:1663 Tactics <> m var
R1616:1618 Coq.Init.Datatypes <> nat ind
R1627:1630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1636:1638 Coq.Init.Logic <> :type_scope:x_'='_x not
R1631:1631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1633:1633 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1635:1635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1634:1634 Tactics <> o var
R1632:1632 Tactics <> q var
R1639:1639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1641:1641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1643:1643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1642:1642 Tactics <> p var
R1640:1640 Tactics <> r var
R1623:1625 Coq.Init.Logic <> :type_scope:x_'='_x not
R1622:1622 Tactics <> q var
R1626:1626 Tactics <> r var
R1587:1589 Coq.Init.Logic <> :type_scope:x_'='_x not
R1586:1586 Tactics <> n var
R1590:1590 Tactics <> m var
prf 2333:2339 <> silly2a
R2357:2359 Coq.Init.Datatypes <> nat ind
R2381:2390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2391:2391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2438:2447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2451:2453 Coq.Init.Logic <> :type_scope:x_'='_x not
R2448:2448 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2450:2450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2449:2449 Tactics <> n var
R2454:2454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2456:2456 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2455:2455 Tactics <> m var
R2406:2408 Coq.Init.Datatypes <> nat ind
R2425:2428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2432:2434 Coq.Init.Logic <> :type_scope:x_'='_x not
R2429:2429 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2431:2431 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2430:2430 Tactics <> q var
R2435:2435 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2437:2437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2436:2436 Tactics <> r var
R2417:2419 Coq.Init.Logic <> :type_scope:x_'='_x not
R2412:2412 Poly <> ::'('_x_','_x_')' not
R2414:2414 Poly <> ::'('_x_','_x_')' not
R2416:2416 Poly <> ::'('_x_','_x_')' not
R2413:2413 Tactics <> q var
R2415:2415 Tactics <> q var
R2420:2420 Poly <> ::'('_x_','_x_')' not
R2422:2422 Poly <> ::'('_x_','_x_')' not
R2424:2424 Poly <> ::'('_x_','_x_')' not
R2421:2421 Tactics <> r var
R2423:2423 Tactics <> r var
R2373:2375 Coq.Init.Logic <> :type_scope:x_'='_x not
R2368:2368 Poly <> ::'('_x_','_x_')' not
R2370:2370 Poly <> ::'('_x_','_x_')' not
R2372:2372 Poly <> ::'('_x_','_x_')' not
R2369:2369 Tactics <> n var
R2371:2371 Tactics <> n var
R2376:2376 Poly <> ::'('_x_','_x_')' not
R2378:2378 Poly <> ::'('_x_','_x_')' not
R2380:2380 Poly <> ::'('_x_','_x_')' not
R2377:2377 Tactics <> m var
R2379:2379 Tactics <> m var
prf 2639:2646 <> silly_ex
R2655:2655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2701:2710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2725:2733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2740:2742 Coq.Init.Logic <> :type_scope:x_'='_x not
R2734:2737 Basics <> oddb def
R2743:2746 Basics <> true constr
R2718:2720 Coq.Init.Logic <> :type_scope:x_'='_x not
R2711:2715 Basics <> evenb def
R2721:2724 Basics <> true constr
R2680:2683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2694:2696 Coq.Init.Logic <> :type_scope:x_'='_x not
R2684:2687 Basics <> oddb def
R2690:2690 Coq.Init.Datatypes <> S constr
R2692:2692 Tactics <> n var
R2697:2700 Basics <> true constr
R2673:2675 Coq.Init.Logic <> :type_scope:x_'='_x not
R2666:2670 Basics <> evenb def
R2672:2672 Tactics <> n var
R2676:2679 Basics <> true constr
prf 3019:3033 <> silly3_firsttry
R3049:3051 Coq.Init.Datatypes <> nat ind
R3078:3087 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3107:3109 Coq.Init.Logic <> :type_scope:x_'='_x not
R3088:3094 Basics <> beq_nat def
R3097:3097 Coq.Init.Datatypes <> S constr
R3100:3100 Coq.Init.Datatypes <> S constr
R3102:3102 Tactics <> n var
R3110:3113 Basics <> true constr
R3064:3066 Coq.Init.Logic <> :type_scope:x_'='_x not
R3060:3063 Basics <> true constr
R3067:3073 Basics <> beq_nat def
R3075:3075 Tactics <> n var
prf 3662:3674 <> rev_exercise1
R3693:3696 Poly <> list ind
R3698:3700 Coq.Init.Datatypes <> nat ind
R3719:3727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3730:3732 Coq.Init.Logic <> :type_scope:x_'='_x not
R3728:3729 Tactics <> l' var
R3733:3735 Poly <> rev def
R3737:3737 Tactics <> l var
R3710:3712 Coq.Init.Logic <> :type_scope:x_'='_x not
R3709:3709 Tactics <> l var
R3713:3715 Poly <> rev def
R3717:3718 Tactics <> l' var
def 4247:4262 <> trans_eq_example
R4288:4290 Coq.Init.Datatypes <> nat ind
R4312:4320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4334:4342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4348:4350 Coq.Init.Logic <> :type_scope:x_'='_x not
R4343:4343 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4345:4345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4347:4347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4346:4346 Tactics <> b var
R4344:4344 Tactics <> a var
R4351:4351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4353:4353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4355:4355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4354:4354 Tactics <> f var
R4352:4352 Tactics <> e var
R4326:4328 Coq.Init.Logic <> :type_scope:x_'='_x not
R4321:4321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4323:4323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4325:4325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4324:4324 Tactics <> d var
R4322:4322 Tactics <> c var
R4329:4329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4331:4331 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4333:4333 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4332:4332 Tactics <> f var
R4330:4330 Tactics <> e var
R4304:4306 Coq.Init.Logic <> :type_scope:x_'='_x not
R4299:4299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4301:4301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4303:4303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4302:4302 Tactics <> b var
R4300:4300 Tactics <> a var
R4307:4307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4309:4309 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4311:4311 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4310:4310 Tactics <> d var
R4308:4308 Tactics <> c var
prf 4612:4619 <> trans_eq
R4648:4648 Tactics <> X var
R4659:4662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4668:4671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4673:4675 Coq.Init.Logic <> :type_scope:x_'='_x not
R4672:4672 Tactics <> n var
R4676:4676 Tactics <> o var
R4664:4666 Coq.Init.Logic <> :type_scope:x_'='_x not
R4663:4663 Tactics <> m var
R4667:4667 Tactics <> o var
R4655:4657 Coq.Init.Logic <> :type_scope:x_'='_x not
R4654:4654 Tactics <> n var
R4658:4658 Tactics <> m var
def 4931:4947 <> trans_eq_example'
R4973:4975 Coq.Init.Datatypes <> nat ind
R4997:5005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5019:5027 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5033:5035 Coq.Init.Logic <> :type_scope:x_'='_x not
R5028:5028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5030:5030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5032:5032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5031:5031 Tactics <> b var
R5029:5029 Tactics <> a var
R5036:5036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5038:5038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5040:5040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5039:5039 Tactics <> f var
R5037:5037 Tactics <> e var
R5011:5013 Coq.Init.Logic <> :type_scope:x_'='_x not
R5006:5006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5008:5008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5010:5010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5009:5009 Tactics <> d var
R5007:5007 Tactics <> c var
R5014:5014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5016:5016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5018:5018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5017:5017 Tactics <> f var
R5015:5015 Tactics <> e var
R4989:4991 Coq.Init.Logic <> :type_scope:x_'='_x not
R4984:4984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4986:4986 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4988:4988 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4987:4987 Tactics <> b var
R4985:4985 Tactics <> a var
R4992:4992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4994:4994 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4996:4996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4995:4995 Tactics <> d var
R4993:4993 Tactics <> c var
R5511:5511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5513:5513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5515:5515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5493:5500 Tactics <> trans_eq thm
R5511:5511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5513:5513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5515:5515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5493:5500 Tactics <> trans_eq thm
def 5847:5863 <> trans_eq_exercise
R5885:5887 Coq.Init.Datatypes <> nat ind
R5912:5920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5932:5940 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5941:5941 Coq.Init.Logic <> :type_scope:x_'='_x not
R5947:5951 Coq.Init.Logic <> :type_scope:x_'='_x not
R5962:5962 Coq.Init.Logic <> :type_scope:x_'='_x not
R5943:5945 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5942:5942 Tactics <> n var
R5946:5946 Tactics <> p var
R5952:5959 Basics <> minustwo def
R5961:5961 Tactics <> o var
R5921:5921 Coq.Init.Logic <> :type_scope:x_'='_x not
R5927:5930 Coq.Init.Logic <> :type_scope:x_'='_x not
R5923:5925 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5922:5922 Tactics <> n var
R5926:5926 Tactics <> p var
R5931:5931 Tactics <> m var
R5897:5900 Coq.Init.Logic <> :type_scope:x_'='_x not
R5911:5911 Coq.Init.Logic <> :type_scope:x_'='_x not
R5896:5896 Tactics <> m var
R5901:5908 Basics <> minustwo def
R5910:5910 Tactics <> o var
prf 7487:7497 <> S_injective
R7515:7517 Coq.Init.Datatypes <> nat ind
R7532:7537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7539:7541 Coq.Init.Logic <> :type_scope:x_'='_x not
R7538:7538 Tactics <> n var
R7542:7542 Tactics <> m var
R7526:7528 Coq.Init.Logic <> :type_scope:x_'='_x not
R7523:7523 Coq.Init.Datatypes <> S constr
R7525:7525 Tactics <> n var
R7529:7529 Coq.Init.Datatypes <> S constr
R7531:7531 Tactics <> m var
prf 8037:8049 <> inversion_ex1
R8069:8071 Coq.Init.Datatypes <> nat ind
R8092:8097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8101:8103 Coq.Init.Logic <> :type_scope:x_'='_x not
R8098:8098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8100:8100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8099:8099 Tactics <> n var
R8104:8104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8106:8106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8105:8105 Tactics <> m var
R8083:8085 Coq.Init.Logic <> :type_scope:x_'='_x not
R8077:8077 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8079:8080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8082:8082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8081:8081 Tactics <> m var
R8078:8078 Tactics <> n var
R8086:8086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8088:8089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8091:8091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8090:8090 Tactics <> o var
R8087:8087 Tactics <> o var
prf 8264:8276 <> inversion_ex2
R8294:8296 Coq.Init.Datatypes <> nat ind
R8311:8316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8318:8320 Coq.Init.Logic <> :type_scope:x_'='_x not
R8317:8317 Tactics <> n var
R8321:8321 Tactics <> m var
R8305:8307 Coq.Init.Logic <> :type_scope:x_'='_x not
R8302:8302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8304:8304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8303:8303 Tactics <> n var
R8308:8308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8310:8310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8309:8309 Tactics <> m var
def 8443:8455 <> inversion_ex3
R8486:8486 Tactics <> X var
R8496:8499 Poly <> list ind
R8501:8501 Tactics <> X var
R8527:8532 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8548:8553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8555:8557 Coq.Init.Logic <> :type_scope:x_'='_x not
R8554:8554 Tactics <> x var
R8558:8558 Tactics <> y var
R8539:8541 Coq.Init.Logic <> :type_scope:x_'='_x not
R8534:8537 Poly <> ::x_'::'_x not
R8533:8533 Tactics <> y var
R8538:8538 Tactics <> l var
R8543:8546 Poly <> ::x_'::'_x not
R8542:8542 Tactics <> x var
R8547:8547 Tactics <> j var
R8518:8520 Coq.Init.Logic <> :type_scope:x_'='_x not
R8508:8511 Poly <> ::x_'::'_x not
R8507:8507 Tactics <> x var
R8513:8516 Poly <> ::x_'::'_x not
R8512:8512 Tactics <> y var
R8517:8517 Tactics <> l var
R8522:8525 Poly <> ::x_'::'_x not
R8521:8521 Tactics <> z var
R8526:8526 Tactics <> j var
prf 8806:8816 <> beq_nat_0_l
R8851:8854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8856:8858 Coq.Init.Logic <> :type_scope:x_'='_x not
R8855:8855 Tactics <> n var
R8844:8846 Coq.Init.Logic <> :type_scope:x_'='_x not
R8833:8839 Basics <> beq_nat def
R8843:8843 Tactics <> n var
R8847:8850 Basics <> true constr
prf 9766:9778 <> inversion_ex4
R9794:9796 Coq.Init.Datatypes <> nat ind
R9809:9814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9820:9822 Coq.Init.Logic <> :type_scope:x_'='_x not
R9816:9818 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9805:9807 Coq.Init.Logic <> :type_scope:x_'='_x not
R9802:9802 Coq.Init.Datatypes <> S constr
R9804:9804 Tactics <> n var
R9808:9808 Coq.Init.Datatypes <> O constr
prf 9884:9896 <> inversion_ex5
R9914:9916 Coq.Init.Datatypes <> nat ind
R9934:9939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9943:9945 Coq.Init.Logic <> :type_scope:x_'='_x not
R9940:9940 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9942:9942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9941:9941 Tactics <> n var
R9946:9946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9948:9948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9947:9947 Tactics <> m var
R9927:9929 Coq.Init.Logic <> :type_scope:x_'='_x not
R9922:9926 Basics <> false constr
R9930:9933 Basics <> true constr
def 10460:10472 <> inversion_ex6
R10529:10529 Tactics <> X var
R10539:10542 Poly <> list ind
R10544:10544 Tactics <> X var
R10566:10571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10587:10592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10594:10596 Coq.Init.Logic <> :type_scope:x_'='_x not
R10593:10593 Tactics <> x var
R10597:10597 Tactics <> z var
R10578:10580 Coq.Init.Logic <> :type_scope:x_'='_x not
R10573:10576 Poly <> ::x_'::'_x not
R10572:10572 Tactics <> y var
R10577:10577 Tactics <> l var
R10582:10585 Poly <> ::x_'::'_x not
R10581:10581 Tactics <> z var
R10586:10586 Tactics <> j var
R10561:10563 Coq.Init.Logic <> :type_scope:x_'='_x not
R10551:10554 Poly <> ::x_'::'_x not
R10550:10550 Tactics <> x var
R10556:10559 Poly <> ::x_'::'_x not
R10555:10555 Tactics <> y var
R10560:10560 Tactics <> l var
R10564:10565 Poly <> ::'['_']' not
prf 11751:11757 <> f_equal
R11786:11789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11790:11790 Tactics <> B var
R11785:11785 Tactics <> A var
R11799:11799 Tactics <> A var
R11810:11813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11817:11819 Coq.Init.Logic <> :type_scope:x_'='_x not
R11814:11814 Tactics <> f var
R11816:11816 Tactics <> x var
R11820:11820 Tactics <> f var
R11822:11822 Tactics <> y var
R11806:11808 Coq.Init.Logic <> :type_scope:x_'='_x not
R11805:11805 Tactics <> x var
R11809:11809 Tactics <> y var
prf 12325:12329 <> S_inj
R12347:12349 Coq.Init.Datatypes <> nat ind
R12357:12360 Basics <> bool ind
R12392:12401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12413:12415 Coq.Init.Logic <> :type_scope:x_'='_x not
R12402:12408 Basics <> beq_nat def
R12412:12412 Tactics <> m var
R12410:12410 Tactics <> n var
R12416:12416 Tactics <> b var
R12388:12390 Coq.Init.Logic <> :type_scope:x_'='_x not
R12369:12375 Basics <> beq_nat def
R12384:12384 Coq.Init.Datatypes <> S constr
R12386:12386 Tactics <> m var
R12378:12378 Coq.Init.Datatypes <> S constr
R12380:12380 Tactics <> n var
R12391:12391 Tactics <> b var
prf 13254:13260 <> silly3'
R13276:13278 Coq.Init.Datatypes <> nat ind
R13284:13284 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13333:13339 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13358:13364 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13369:13371 Coq.Init.Logic <> :type_scope:x_'='_x not
R13365:13368 Basics <> true constr
R13372:13378 Basics <> beq_nat def
R13381:13381 Coq.Init.Datatypes <> S constr
R13384:13384 Coq.Init.Datatypes <> S constr
R13386:13386 Tactics <> n var
R13344:13346 Coq.Init.Logic <> :type_scope:x_'='_x not
R13340:13343 Basics <> true constr
R13347:13353 Basics <> beq_nat def
R13355:13355 Tactics <> n var
R13303:13306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13326:13328 Coq.Init.Logic <> :type_scope:x_'='_x not
R13307:13313 Basics <> beq_nat def
R13316:13316 Coq.Init.Datatypes <> S constr
R13319:13319 Coq.Init.Datatypes <> S constr
R13321:13321 Tactics <> n var
R13329:13332 Basics <> true constr
R13296:13298 Coq.Init.Logic <> :type_scope:x_'='_x not
R13285:13291 Basics <> beq_nat def
R13293:13293 Tactics <> n var
R13299:13302 Basics <> true constr
prf 14268:14285 <> plus_n_n_injective
R14319:14327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14329:14331 Coq.Init.Logic <> :type_scope:x_'='_x not
R14328:14328 Tactics <> n var
R14332:14332 Tactics <> m var
R14311:14313 Coq.Init.Logic <> :type_scope:x_'='_x not
R14307:14309 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14306:14306 Tactics <> n var
R14310:14310 Tactics <> n var
R14315:14317 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14314:14314 Tactics <> m var
R14318:14318 Tactics <> m var
prf 15315:15337 <> double_injective_FAILED
R15377:15385 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15387:15389 Coq.Init.Logic <> :type_scope:x_'='_x not
R15386:15386 Tactics <> n var
R15390:15390 Tactics <> m var
R15366:15368 Coq.Init.Logic <> :type_scope:x_'='_x not
R15358:15363 Induction <> double def
R15365:15365 Tactics <> n var
R15369:15374 Induction <> double def
R15376:15376 Tactics <> m var
R15670:15676 Tactics <> f_equal thm
R15670:15676 Tactics <> f_equal thm
prf 17912:17927 <> double_injective
R17967:17975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17977:17979 Coq.Init.Logic <> :type_scope:x_'='_x not
R17976:17976 Tactics <> n var
R17980:17980 Tactics <> m var
R17956:17958 Coq.Init.Logic <> :type_scope:x_'='_x not
R17948:17953 Induction <> double def
R17955:17955 Tactics <> n var
R17959:17964 Induction <> double def
R17966:17966 Tactics <> m var
R18853:18859 Tactics <> f_equal thm
R18853:18859 Tactics <> f_equal thm
prf 19760:19771 <> beq_nat_true
R19809:19812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19814:19816 Coq.Init.Logic <> :type_scope:x_'='_x not
R19813:19813 Tactics <> n var
R19817:19817 Tactics <> m var
R19802:19804 Coq.Init.Logic <> :type_scope:x_'='_x not
R19791:19797 Basics <> beq_nat def
R19801:19801 Tactics <> m var
R19799:19799 Tactics <> n var
R19805:19808 Basics <> true constr
prf 20392:20420 <> double_injective_take2_FAILED
R20460:20468 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20470:20472 Coq.Init.Logic <> :type_scope:x_'='_x not
R20469:20469 Tactics <> n var
R20473:20473 Tactics <> m var
R20449:20451 Coq.Init.Logic <> :type_scope:x_'='_x not
R20441:20446 Induction <> double def
R20448:20448 Tactics <> n var
R20452:20457 Induction <> double def
R20459:20459 Tactics <> m var
R20753:20759 Tactics <> f_equal thm
R20753:20759 Tactics <> f_equal thm
prf 21695:21716 <> double_injective_take2
R21756:21764 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21766:21768 Coq.Init.Logic <> :type_scope:x_'='_x not
R21765:21765 Tactics <> n var
R21769:21769 Tactics <> m var
R21745:21747 Coq.Init.Logic <> :type_scope:x_'='_x not
R21737:21742 Induction <> double def
R21744:21744 Tactics <> n var
R21748:21753 Induction <> double def
R21755:21755 Tactics <> m var
R22232:22238 Tactics <> f_equal thm
R22232:22238 Tactics <> f_equal thm
prf 24438:24448 <> beq_id_true
R24483:24486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24488:24490 Coq.Init.Logic <> :type_scope:x_'='_x not
R24487:24487 Tactics <> x var
R24491:24491 Tactics <> y var
R24476:24478 Coq.Init.Logic <> :type_scope:x_'='_x not
R24466:24471 Lists <> beq_id def
R24475:24475 Tactics <> y var
R24473:24473 Tactics <> x var
R24479:24482 Basics <> true constr
R24552:24554 Coq.Init.Logic <> :type_scope:x_'='_x not
R24552:24554 Coq.Init.Logic <> :type_scope:x_'='_x not
R24567:24578 Tactics <> beq_nat_true prfax
R24567:24578 Tactics <> beq_nat_true prfax
prf 24736:24755 <> nth_error_after_last
R24770:24772 Coq.Init.Datatypes <> nat ind
R24791:24794 Poly <> list ind
R24796:24796 Tactics <> X var
R24817:24825 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24839:24841 Coq.Init.Logic <> :type_scope:x_'='_x not
R24826:24834 Poly <> nth_error def
R24838:24838 Tactics <> n var
R24836:24836 Tactics <> l var
R24842:24845 Poly <> None constr
R24813:24815 Coq.Init.Logic <> :type_scope:x_'='_x not
R24805:24810 Poly <> length def
R24812:24812 Tactics <> l var
R24816:24816 Tactics <> n var
def 25172:25177 <> square
R25185:25187 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25184:25184 Tactics <> n var
R25188:25188 Tactics <> n var
prf 25259:25269 <> square_mult
R25299:25301 Coq.Init.Logic <> :type_scope:x_'='_x not
R25285:25290 Tactics <> square def
R25294:25296 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25293:25293 Tactics <> n var
R25297:25297 Tactics <> m var
R25310:25312 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25302:25307 Tactics <> square def
R25309:25309 Tactics <> n var
R25313:25318 Tactics <> square def
R25320:25320 Tactics <> m var
R25637:25642 Tactics <> square def
R25967:25976 Induction <> mult_assoc prfax
R25967:25976 Induction <> mult_assoc prfax
R25967:25976 Induction <> mult_assoc prfax
R26002:26004 Coq.Init.Logic <> :type_scope:x_'='_x not
R25998:26000 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25994:25996 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26010:26012 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26006:26008 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26002:26004 Coq.Init.Logic <> :type_scope:x_'='_x not
R25998:26000 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25994:25996 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26010:26012 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26006:26008 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26029:26037 Induction <> mult_comm prfax
R26029:26037 Induction <> mult_comm prfax
R26029:26037 Induction <> mult_comm prfax
R26046:26055 Induction <> mult_assoc prfax
R26046:26055 Induction <> mult_assoc prfax
R26081:26090 Induction <> mult_assoc prfax
R26081:26090 Induction <> mult_assoc prfax
R26081:26090 Induction <> mult_assoc prfax
def 26478:26480 <> foo
R26486:26488 Coq.Init.Datatypes <> nat ind
prf 26701:26712 <> silly_fact_1
R26735:26737 Coq.Init.Logic <> :type_scope:x_'='_x not
R26731:26733 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26726:26728 Tactics <> foo def
R26730:26730 Tactics <> m var
R26749:26751 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26738:26740 Tactics <> foo def
R26744:26746 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26743:26743 Tactics <> m var
def 26982:26984 <> bar
R26999:26999 Tactics <> x var
R27010:27010 Coq.Init.Datatypes <> O constr
R27021:27021 Coq.Init.Datatypes <> S constr
prf 27095:27113 <> silly_fact_2_FAILED
R27136:27138 Coq.Init.Logic <> :type_scope:x_'='_x not
R27132:27134 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27127:27129 Tactics <> bar def
R27131:27131 Tactics <> m var
R27150:27152 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27139:27141 Tactics <> bar def
R27145:27147 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27144:27144 Tactics <> m var
prf 28144:28155 <> silly_fact_2
R28178:28180 Coq.Init.Logic <> :type_scope:x_'='_x not
R28174:28176 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28169:28171 Tactics <> bar def
R28173:28173 Tactics <> m var
R28192:28194 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28181:28183 Tactics <> bar def
R28187:28189 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28186:28186 Tactics <> m var
prf 28545:28557 <> silly_fact_2'
R28580:28582 Coq.Init.Logic <> :type_scope:x_'='_x not
R28576:28578 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28571:28573 Tactics <> bar def
R28575:28575 Tactics <> m var
R28594:28596 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28583:28585 Tactics <> bar def
R28589:28591 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28588:28588 Tactics <> m var
R28628:28630 Tactics <> bar def
def 29274:29281 <> sillyfun
R29288:29290 Coq.Init.Datatypes <> nat ind
R29295:29298 Basics <> bool ind
R29308:29314 Basics <> beq_nat def
R29316:29316 Tactics <> n var
R29341:29347 Basics <> beq_nat def
R29349:29349 Tactics <> n var
R29371:29375 Basics <> false constr
R29358:29362 Basics <> false constr
R29325:29329 Basics <> false constr
prf 29387:29400 <> sillyfun_false
R29416:29418 Coq.Init.Datatypes <> nat ind
R29434:29436 Coq.Init.Logic <> :type_scope:x_'='_x not
R29424:29431 Tactics <> sillyfun def
R29433:29433 Tactics <> n var
R29437:29441 Basics <> false constr
R29470:29477 Tactics <> sillyfun def
R29492:29498 Basics <> beq_nat def
R29492:29498 Basics <> beq_nat def
R29592:29598 Basics <> beq_nat def
R29592:29598 Basics <> beq_nat def
prf 30397:30409 <> combine_split
R30429:30432 Poly <> list ind
R30436:30438 Poly <> :type_scope:x_'*'_x not
R30435:30435 Tactics <> X var
R30439:30439 Tactics <> Y var
R30470:30475 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30489:30491 Coq.Init.Logic <> :type_scope:x_'='_x not
R30476:30482 Poly <> combine def
R30487:30488 Tactics <> l2 var
R30484:30485 Tactics <> l1 var
R30492:30492 Tactics <> l var
R30459:30461 Coq.Init.Logic <> :type_scope:x_'='_x not
R30452:30456 Poly <> split prfax
R30458:30458 Tactics <> l var
R30462:30462 Poly <> ::'('_x_','_x_')' not
R30465:30466 Poly <> ::'('_x_','_x_')' not
R30469:30469 Poly <> ::'('_x_','_x_')' not
R30463:30464 Tactics <> l1 var
R30467:30468 Tactics <> l2 var
def 30796:30804 <> sillyfun1
R30811:30813 Coq.Init.Datatypes <> nat ind
R30818:30821 Basics <> bool ind
R30831:30837 Basics <> beq_nat def
R30839:30839 Tactics <> n var
R30863:30869 Basics <> beq_nat def
R30871:30871 Tactics <> n var
R30892:30896 Basics <> false constr
R30880:30883 Basics <> true constr
R30848:30851 Basics <> true constr
prf 31155:31174 <> sillyfun1_odd_FAILED
R31190:31192 Coq.Init.Datatypes <> nat ind
R31219:31227 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31234:31236 Coq.Init.Logic <> :type_scope:x_'='_x not
R31228:31231 Basics <> oddb def
R31233:31233 Tactics <> n var
R31237:31240 Basics <> true constr
R31212:31214 Coq.Init.Logic <> :type_scope:x_'='_x not
R31201:31209 Tactics <> sillyfun1 def
R31211:31211 Tactics <> n var
R31215:31218 Basics <> true constr
R31272:31280 Tactics <> sillyfun1 def
R31301:31307 Basics <> beq_nat def
R31301:31307 Basics <> beq_nat def
prf 32157:32169 <> sillyfun1_odd
R32185:32187 Coq.Init.Datatypes <> nat ind
R32214:32222 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32229:32231 Coq.Init.Logic <> :type_scope:x_'='_x not
R32223:32226 Basics <> oddb def
R32228:32228 Tactics <> n var
R32232:32235 Basics <> true constr
R32207:32209 Coq.Init.Logic <> :type_scope:x_'='_x not
R32196:32204 Tactics <> sillyfun1 def
R32206:32206 Tactics <> n var
R32210:32213 Basics <> true constr
R32267:32275 Tactics <> sillyfun1 def
R32296:32302 Basics <> beq_nat def
R32296:32302 Basics <> beq_nat def
R32551:32562 Tactics <> beq_nat_true prfax
R32551:32562 Tactics <> beq_nat_true prfax
R32849:32855 Basics <> beq_nat def
R32849:32855 Basics <> beq_nat def
R32915:32926 Tactics <> beq_nat_true prfax
R32915:32926 Tactics <> beq_nat_true prfax
prf 33090:33111 <> bool_fn_applied_thrice
R33133:33136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33137:33140 Basics <> bool ind
R33129:33132 Basics <> bool ind
R33148:33151 Basics <> bool ind
R33168:33170 Coq.Init.Logic <> :type_scope:x_'='_x not
R33157:33157 Tactics <> f var
R33160:33160 Tactics <> f var
R33163:33163 Tactics <> f var
R33165:33165 Tactics <> b var
R33171:33171 Tactics <> f var
R33173:33173 Tactics <> b var
prf 35484:35494 <> beq_nat_sym
R35512:35514 Coq.Init.Datatypes <> nat ind
R35531:35533 Coq.Init.Logic <> :type_scope:x_'='_x not
R35520:35526 Basics <> beq_nat def
R35530:35530 Tactics <> m var
R35528:35528 Tactics <> n var
R35534:35540 Basics <> beq_nat def
R35544:35544 Tactics <> n var
R35542:35542 Tactics <> m var
prf 35922:35934 <> beq_nat_trans
R35972:35977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35996:36001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36013:36015 Coq.Init.Logic <> :type_scope:x_'='_x not
R36002:36008 Basics <> beq_nat def
R36012:36012 Tactics <> p var
R36010:36010 Tactics <> n var
R36016:36019 Basics <> true constr
R35989:35991 Coq.Init.Logic <> :type_scope:x_'='_x not
R35978:35984 Basics <> beq_nat def
R35988:35988 Tactics <> p var
R35986:35986 Tactics <> m var
R35992:35995 Basics <> true constr
R35965:35967 Coq.Init.Logic <> :type_scope:x_'='_x not
R35954:35960 Basics <> beq_nat def
R35964:35964 Tactics <> m var
R35962:35962 Tactics <> n var
R35968:35971 Basics <> true constr
def 36765:36787 <> split_combine_statement
prf 36961:36973 <> split_combine
R36977:36999 Tactics <> split_combine_statement prfax
prf 37218:37232 <> filter_exercise
R37263:37266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37267:37270 Basics <> bool ind
R37262:37262 Tactics <> X var
R37307:37307 Tactics <> X var
R37318:37321 Poly <> list ind
R37323:37323 Tactics <> X var
R37355:37363 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37370:37372 Coq.Init.Logic <> :type_scope:x_'='_x not
R37364:37367 Tactics <> test var
R37369:37369 Tactics <> x var
R37373:37376 Basics <> true constr
R37345:37347 Coq.Init.Logic <> :type_scope:x_'='_x not
R37332:37337 Poly <> filter def
R37344:37344 Tactics <> l var
R37339:37342 Tactics <> test var
R37349:37352 Poly <> ::x_'::'_x not
R37348:37348 Tactics <> x var
R37353:37354 Tactics <> lf var
